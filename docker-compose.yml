version: '3.1'

services:
  client-service:
    container_name: client-service
    restart: on-failure
    build: ./client-service
    depends_on:
      - kafka
      - mongodb
    ports:
      - "8081:8080"
  courier-service:
    container_name: courier-service
    restart: on-failure
    build: ./courier-service
    depends_on:
      - kafka
      - mongodb
    ports:
      - "8082:8080"
  palmetto-service:
    container_name: palmetto-service
    restart: on-failure
    build: ./palmetto-service
    depends_on:
      - kafka
      - mongodb
    ports:
      - "8083:8080"
  mongodb:
    container_name: mongo
    image: mongo
    restart: always
    volumes:
      - mongo-volume:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
  mongo-ui:
    container_name: mongo-ui
    image: mongo-express
    restart: always
    ports:
      - "8090:8081"
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME : ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD  : ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_BROKER_ID: 101
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9091,EXTERNAL://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 101@kafka:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9091,EXTERNAL://localhost:9092
      KAFKA_KRAFT_CLUSTER_ID: ppfbPpQSTVSoFZ4IT8Xbtg
    volumes:
      - kafka-volume:/bitnami/kafka
  init-kafka:
    image: 'bitnami/kafka:latest'
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      kafka-topics.sh --bootstrap-server kafka:9091 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics.sh --bootstrap-server kafka:9091 --create --if-not-exists --topic orders --replication-factor 1 --partitions 3
      kafka-topics.sh --bootstrap-server kafka:9091 --create --if-not-exists --topic notifications --replication-factor 1 --partitions 3
      
      echo -e 'Successfully created the following topics:'
      kafka-topics.sh --bootstrap-server kafka:9091 --list
      "
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.4.0
    ports:
      - "8091:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9091
      - KAFKA_CLUSTERS_0_NAME=kraft

volumes:
  kafka-volume:
  mongo-volume:
    driver: local
